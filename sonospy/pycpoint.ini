#====================================================================

#[IP Volume]
#
# You can control volume on external kit is using the IR interface
#
#Front Room,Volume Up=IRAnywhere/AV VOL UP.txt
#Front Room,Volume Down=IRAnywhere/AV VOL DOWN.txt
#Front Room,Volume Mute=IRAnywhere/AV MUTE.txt
#Front Room,Volume UnMute=IRAnywhere/AV UNMUTE.txt
#IR_IP=192.168.0.31
#IR_PORT=65432

#====================================================================

[INI]
controlpoint_port=50101
proxy_port=50102
comms_port=50103
wmp_proxy_port=10243
wmp_internal_port=10244
internal_proxy_udn=uuid:5e0fc086-1c37-4648-805c-ec2aba2b0a27

[database]
#db_cache_size=2000
#db_persist_connection=N

#====================================================================

[display preferences]

# If you have both art embedded in music files and art in folders, you
# can choose which one takes precedence with prefer_folderart

prefer_folderart=Y

# You can choose whether the artist index contains entries from the
# artist or albumartist tags in your data (note that the contributing
# artist index will contain entries from your artist tags). If you want
# to show albumartist tags, set use_albumartist to Y

use_albumartist=Y

# You can choose how to group tracks into albums. If you want all 
# tracks from an album to be together regardless of albumartist, set
# album_identification to album. If you want separate albums for 
# separate artists, set it to album,albumartist.

album_identification=album
#album_identification=album,albumartist

# If you have set album_identification to group albums with the same
# name, you will get tracks from multiple same-named albums together
# when selecting them from the artists index. You can choose for those
# to have separate index entries by setting the following key to Y
# (note that you will also have to enable them in scan):

show_separate_albums=N

# If you have multiple tag entries per track, you can use the following
# keys to set which of those entries are displayed in the now playing
# screen. Those same tags will be the ones scrobbled if scrobbling is 
# enabled.
#
# Allowable values are:
#
#     first    - the first tag entry is displayed
#     last     - the last entry is displayed
#     all      - all tag entries are displayed, separated by the 
#                combiner characters
#     selected - the selected (in the index) entry is displayed
#                (default)
#
# Fields where multiple tags can cause alternate display values are:
#
#     album / artist

now_playing_album=first
now_playing_album_combiner=' / '

now_playing_artist=last
now_playing_artist_combiner=' / '

# If playing a track from a virtual album or work, you can set whether
# to display the virtual/work name and/or artist name instead of the
# track album/artist names (note whatever is displayed is scrobbled).
# To do so set one or more of the following keys to Y:

virtual_now_playing_album = N
virtual_now_playing_artist = N

work_now_playing_album = N
work_now_playing_artist = N

#====================================================================

[index entry extras]

# This section allows setting of characters to be displayed around
# extra fields added to index entries. The extra fields themselves
# are defined in the simple sort orders section. You can add extra
# fields before (prefix) and/or after (suffix) an entry. Extra fields
# are displayed as:
#
#     PREFIX entry SUFFIX
#
# You can specify a prefix before an index entry, for example 
# playcount. You can specify the characters that you want to display
# around the prefix. If you want to include spaces in the characters,
# enclose the characters in single quotes. The 
# entry_prefix_start_separator characters will be displayed before 
# the prefix, and the entry_prefix_end_separator will be displayed
# after the prefix (and so between the prefix and the entry). If
# you do not want a separator, leave it empty. The prefix will be
# displayed as:
#
#     START_SEPARATOR prefix END_SEPARATOR

entry_prefix_start_separator=
entry_prefix_end_separator=' • '

# You can specify a suffix after an entry. The same rules apply as
# for a prefix, but note that in this case the start character will
# be between the suffix and the entry and the end character will be
# at the end of the line.

entry_suffix_start_separator=' • '
entry_suffix_end_separator=

# When a prefix or a suffix is displayed with an entry, it is 
# possible that the prefix/suffix will be blank due to empty tag
# data. If you want a specific character or characters to be
# displayed instead of nothing, specify them in the entry_extras_empty
# key (note that removing the key will result in _ being displayed,
# whereas setting in to nothing will result in nothing being displayed). 
# If you do not want the prefix/suffix separator displayed if the
# prefix/suffix is empty, set the dont_display_separator_for_empty_prefix
# and/or dont_display_separator_for_empty_suffix flags to Y.

entry_extras_empty=?
dont_display_separator_for_empty_prefix=N
dont_display_separator_for_empty_suffix=N

# When you specify a date to be displayed as a prefix or a suffix,
# you may want to control the format used to display the date. Do that with
# the entry_extras_date_format key.
# 
# entry_extras_date_format accepts as its argument a string that may and
# should include legal Python date format codes.
#
# For example, assuming a file tagged with a date of 1st February 2011, then:
#
# entry_extras_date_format=%Y       results in 2011
# entry_extras_date_format=%d/%m/%y results in 01/02/11
#
# See
# http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior
# for more information.

entry_extras_date_format=%Y

#====================================================================

[virtuals]

# Virtual albums are albums that you define yourself in .sp files.
# You can control which indexes virtual albums are displayed in. 
# To set whether virtuals are displayed alongside albums by default
# set the key to Y. If set to Y the show_albums key in indexes will
# default to AVW, if set to N it will default to A. You can override
# the default settings for an index in the index ini file, for
# instance to only show virtuals in an index set it to V.

display_virtuals_by_default=Y

#====================================================================

[works]

# Works are albums that you define yourself in .sp files.
# You can control which indexes works are displayed in.
# To set whether works are displayed alongside albums by default
# set the key to Y. If set to Y the show_albums key in indexes will
# default to AVW, if set to N it will default to A. You can override
# the default settings for an index in the index ini file, for
# instance to only show works in an index set it to W.

display_works_by_default=Y

#====================================================================

[indexing]

# When using Sonospy to serve your database to Sonos controllers,
# you can choose to do it two ways:
#
#    1) As a Windows Media Player clone (via the Proxy)
#
#       This serves files directly without transcoding, but
#       does not offer search capabilities
#
#    2) As a local music service (via the Service)
#
#       This has to transcode files, but does offer search
#       capabilities
#
# You can choose to offer both methods at the same time, as well
# as running multiple versions of the WMP clone against different
# databases.
#
# Turning on these capabilities is controlled from the command 
# line (see README). Once turned on you have the option to utilise
# the default indexes provided by those services, or create your 
# own to suit your own personal needs. For either option, you can
# also control other aspects of those indexes, including:
#
#    1) The sort order of entries in an index
#    2) Data to be displayed before an entry
#    3) Data to be displayed after an entry
#
# You can also choose to treat the same index differently across
# different Proxies and/or the Service, as well as on different
# controllers.
# 
# If you choose to define your own indexes, then you can also
# control the range of data in an index.
#
# To turn on alternate indexing you set the alternative_indexing
# flag (note that this turns it on for both the Proxy and the
# Service).
#
# Allowable settings are:
#
#    N     - alternative indexing is not enabled
#
#    Y     - alternative indexing is enabled
#

alternative_indexing=N

# If alternate_indexing is set to Y, you should then provide 
# details of how you want those indexes to operate.
# 
# If you just want to utilise the default indexes and perhaps
# change their ordering and add additional display data, then
# you edit the defaultindex.ini file and set the values you desire.
#
# If you want to display your own indexes and change their
# hierarchies, then you need to turn on user indexes (using 
# the user_indexes key below) and then set values for them
# in the appropriate ini file (see note below about how to 
# name that file).

# ============
# USER INDEXES
# ============
#

# If you want to define which indexes are to be displayed in the
# Sonos controllers, you need to set the user_indexes flag to Y:

user_indexes=N

# Note that if user indexes are enabled, no default indexes will be
# displayed (so you have to define equivalents of any default indexes
# you would like to retain).
#
# Once you have turned user_indexes on here, then you should set
# values for those indexes in a separate ini file. If you just want
# to use a single user index ini file, then you can use the default
# filename of userindex.ini and it will automatically be read. If you
# want to use a different filename, or associate separate files with
# different proxies, then you need to specify the filename on the
# command line (see README).

#====================================================================

[icons]

# ===========
# INDEX ICONS
# ===========
#

# If you are serving your database as a local music service, you
# can choose what icons to display in the controller at index
# levels. Below you can specify which icons you want to be
# available to display. Generally you would want to display an
# icon for a container such as albums or artists, but not for
# an individual album or track (you want to see albumart for 
# that). Once you have specified the list of available icons,
# you can link them to indexes in userindex.ini (note that
# defaultindex.ini uses a set of default icons).
# 
# To specify an icon, create a key for the icon name, with
# a value that is the root of the icon name in the images
# folder. For example, for an artists icon whose images are
# artists_legacy.png, artists_40.svg and artists_290.svg,
# create the following entry:
#
# icon_artists=artists

icon_albums=albums
icon_albumartists=albumartists
icon_composers=composers
icon_artists=artists
icon_genres=genres
icon_playlists=playlists
icon_tracks=tracks
icon_separator=separator

