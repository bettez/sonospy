# ====================
# USER DEFINED INDEXES
# ====================
#
# There are two types of user defined indexes:
#
#    1) Indexes that get their data from the tracks database
#       (user indexes)
#    2) Indexes that are used to allow alternate paths down 
#       user indexes (path indexes)
#
# To define a user index, you create a tree key, with a value of
# the indexes that you want to display down its hierarchy down
# to leaf level. The indexes must be valid fields from track
# tags separated by forward slashes, or a path index (here you
# create the name yourself, which must be different from any
# track tag name).
#
# Each index will be displayed under the root of the Proxy/Service
# entry. The value displayed in the root of the Proxy/Service is set 
# using the title key, setting its value to the text you want
# displayed.
#
# The final entry in each hierarchy must be the track entry.
#
# All root entries except for path indexes will also result in a
# search entry of the same name in the Service interface.
#
# The format of a index entry is:
#
#     tree=hierarchy-index1/hierarchy-index2/..../track
#         title=root index name
#
# where hierarchy-indexN can be either a track tag name or
# a name you have defined to signify a path.
#
# Note that there is also the option to create an index but not
# have it display on the controller. That is useful if you want
# to be able to search an index but not browse it. To make an
# index invisible, set the display key to N:
#
#         display=N
#
# ===========================
# USER DEFINED INDEX SETTINGS
# ===========================
#
# If you just want your user defined indexes to be displayed with
# default data from the database and default ordering, you do not
# need to set any other entries for those indexes. Note however
# that if you have created path indexes, they will all contain the
# same data unless you define other settings for them.
#
# If you want to alter what data is displayed in a user defined or
# path index, you need to define an index key naming the index
# that you want to define settings for, followed by keys that
# detail the settings you want.
#
# You define index keys immediately after the tree keys to which 
# they relate.
#
# For user defined indexes based on track tags, the following keys can be set:
#
#     proxyname     - to set which proxy the entries relate to
#     servicename   - to set which service the entries relate to
#     controller    - to set which controllers the entries relate to
#     sort_order    - to set which fields are used in the order by clause
#     entry_prefix  - to set which tags to display before the title
#     entry_suffix  - to set which tags to display after the title
#     index_range   - to set the range of titles to display
#     range_field   - to set the field that an index range applies to (if
#                     you do not set the range field it defaults to the
#                     index field)
#
# For path indexes, only the following keys are applicable:
#
#     proxyname     - to set which proxy the entries relate to
#     servicename   - to set which service the entries relate to
#     controller    - to set which controllers the entries relate to
#     entry_prefix  - this can only be empty or @
#     entry_suffix  - this can only be empty or @
#
# To name an entry in a path index, you need to create an entry key,
# with the value containing the text that you want to be displayed
# for that entry in the path index. If you want different index
# settings for different path key entries, then create index keys
# after each path index entry.
#
# If you specify an index_range, you must use the following syntax:
#
#     start to end              start match to end match in tag data type
#
#     first n records           number of records in sort order from beginning
#     last n records            number of records in sort order from end
#
#     last n days               number of days before today
#     last n weeks              number of weeks before today
#     last n months             number of months before today
#     last n years              number of years before today
#
#     n days to m days        number of days, from n days to m days
#     n weeks to m weeks      number of weeks, from n weeks to m weeks
#     n months to m months    number of months, from n months to m months
#     n years to m years      number of years, from n years to m years
#
# Note that all units are plural, even if n=1.
#
# Index range examples:
#
#     artist        a to czzzzzzz
#     leastplayed   first 100 records
#     inserted      last 30 days
#     inserted      31 days to 90 days

# TODO: copy in key/value descriptions from defaultindex.ini
# TODO: tidy up examples and explain them

[indexes]

tree=album/track
    title=Albums

tree=album/track
    title=Albums 2

    index=album
        index_range=first 10 records

tree=albumartist/album/track
    title=Artists

tree=albumartist-alpha/albumartist/album/track
    title=Artists by alpha
    
    index=albumartist-alpha
        entry=A-M
        
            index=albumartist
                range_field=albumartist
                index_range=! to mzzzzzz

    index=albumartist-alpha
        entry=N-Z
        
            index=albumartist
                range_field=albumartist
                index_range=n to zzzzzzz

tree=composer/album/track
    title=Composers
    
tree=recent-entries/artist/album/track
    title=Recent rips

    index=recent-entries
        entry=Last month

        index=artist
            sort_order=inserted desc
            entry_prefix=inserted
            range_field=inserted
            index_range=last 1 months

            index=album
                sort_order=inserted desc
                entry_prefix=inserted

    index=recent-entries
        entry=1-2 months

        index=artist
            sort_order=inserted desc
            entry_prefix=inserted{str(int((time.time() - inserted) / 86400)) + ' days'}
            range_field=inserted
            index_range=1 months to 2 months

    index=recent-entries
        entry=2-3 months

        index=artist
            sort_order=inserted desc
            range_field=inserted
            index_range=2 months to 3 months

tree=playlist/track
    title=Playlists

tree=track
    title=Tracks

# =====================
# USER DEFINED SEARCHES
# =====================
#
# If you are using the Service interface, you can specify a list of indexes
# that can be searched. That list can include:
#
#     1) Individual root level indexes defined above (search)
#     2) Combined root level indexes defined above (multisearch)
#     3) Non-root level indexes defined above (subsearch)
#
# To offer search for an individual root level index, you set the search
# key to the title of that index.
#
# Each search entry will be displayed under the root of the Service
# search entry. The value displayed in the root of the Service is set 
# using the search title key, setting its value to the text you want
# displayed.
#
# You can specify search entries that search across multiple indexes
# at the same time. To do so define a multisearch key, with a value of
# a comma separated list of root level titles. Note that you cannot 
# specify user defined indexes in the index list, and that it is not
# really sensible to combine textual and date formats in the same search.
#
# You can also specify search entries that search across non root indexes.
# In this case you define a subsearch key, with the value being the root
# index title followed by the sub-index of that root entry that you want
# to search separated by a forward slash.

[searches]

# These search entries will search individual indexes:

search=Albums
    title=Album
    
search=Artists
    title=Artist
    
search=Tracks
    title=Track

# This search entry will search across the album, artist and track
# indexes at the same time:

multisearch=Albums,Artists,Tracks
    title=Album/Albumartist/Track

# This search entry will search for tracks across all Playlists:

subsearch=Playlists/track
    title=Playlist Tracks

